<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MotorcycleManager.WebAPI</name>
    </assembly>
    <members>
        <member name="T:MotorcycleManager.WebAPI.Controllers.CamerasController">
            <summary>
            Controlador para la gestión de cámaras.
            </summary>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.CamerasController.GetCameras(System.Threading.CancellationToken)">
            <summary>
            Obtiene todas las cámaras registradas en el sistema.
            </summary>
            <returns>Lista de cámaras.</returns>
            <response code="200">Lista de cámaras obtenida exitosamente.</response>
            <response code="401">No autorizado.</response>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.CamerasController.CreateCamera(MotorcycleManager.Application.Cameras.Commands.CreateCameraCommand,System.Threading.CancellationToken)">
            <summary>
            Crea una nueva cámara en el sistema.
            </summary>
            <param name="command">Datos de la cámara a crear.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>ID de la cámara creada.</returns>
            <response code="201">Cámara creada exitosamente.</response>
            <response code="400">Datos de entrada inválidos.</response>
            <response code="401">No autorizado.</response>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.CamerasController.UpdateCamera(System.Guid,MotorcycleManager.Application.Cameras.Commands.UpdateCameraCommand,System.Threading.CancellationToken)">
            <summary>
            Actualiza una cámara existente en el sistema.
            </summary>
            <param name="id">ID de la cámara a actualizar.</param>
            <param name="command">Datos actualizados de la cámara.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Resultado de la operación.</returns>
            <response code="204">Cámara actualizada exitosamente.</response>
            <response code="400">Datos de entrada inválidos.</response>
            <response code="401">No autorizado.</response>
            <response code="404">Cámara no encontrada.</response>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.CamerasController.DeleteCamera(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Elimina lógicamente una cámara del sistema.
            </summary>
            <param name="id">ID de la cámara a eliminar.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Resultado de la operación.</returns>
            <response code="204">Cámara eliminada exitosamente.</response>
            <response code="401">No autorizado.</response>
            <response code="404">Cámara no encontrada.</response>
        </member>
        <member name="T:MotorcycleManager.WebAPI.Controllers.SightingsController">
            <summary>
            Controlador para la gestión de avistamientos.
            </summary>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.GetRecentSightings(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Obtiene los avistamientos más recientes.
            </summary>
            <param name="limit">Número máximo de avistamientos a retornar (por defecto: 10).</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Lista de avistamientos recientes.</returns>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.GetSightingById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtiene un avistamiento por su ID.
            </summary>
            <param name="id">ID del avistamiento.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Detalles del avistamiento.</returns>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.CreateSighting(MotorcycleManager.WebAPI.Controllers.CreateSightingRequest,System.Threading.CancellationToken)">
            <summary>
            Crea un nuevo avistamiento con imagen.
            </summary>
            <param name="request">Datos del avistamiento incluyendo la imagen.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>ID del avistamiento creado.</returns>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.UpdateSighting(System.Guid,MotorcycleManager.WebAPI.Controllers.UpdateSightingRequest,System.Threading.CancellationToken)">
            <summary>
            Actualiza un avistamiento existente.
            </summary>
            <param name="id">ID del avistamiento a actualizar.</param>
            <param name="request">Datos actualizados del avistamiento.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Resultado de la operación.</returns>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.DeleteSighting(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Elimina un avistamiento (borrado lógico).
            </summary>
            <param name="id">ID del avistamiento a eliminar.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Resultado de la operación.</returns>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.GetSightingCountsByCamera(System.Threading.CancellationToken)">
            <summary>
            Obtiene el conteo de avistamientos agrupados por cámara.
            </summary>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Lista de conteos por cámara ordenada por número de avistamientos (descendente).</returns>
            <response code="200">Retorna la lista de conteos por cámara</response>
            <response code="500">Error interno del servidor</response>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.GetSightingCountsByBrand(System.Threading.CancellationToken)">
            <summary>
            Obtiene el conteo de avistamientos agrupados por marca de motocicleta.
            </summary>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Lista de conteos por marca ordenada por número de avistamientos (descendente).</returns>
            <response code="200">Retorna la lista de conteos por marca</response>
            <response code="500">Error interno del servidor</response>
        </member>
        <member name="M:MotorcycleManager.WebAPI.Controllers.SightingsController.GetSightingCountsByEngineDisplacement(System.Threading.CancellationToken)">
            <summary>
            Obtiene el conteo de avistamientos agrupados por cilindrada del motor.
            </summary>
            <param name="cancellationToken">Token de cancelación.</param>
            <returns>Lista de conteos por cilindrada ordenada por cilindrada (ascendente).</returns>
            <response code="200">Retorna la lista de conteos por cilindrada</response>
            <response code="500">Error interno del servidor</response>
            <remarks>
            Solo incluye motocicletas que tienen cilindrada definida.
            Los resultados están ordenados de menor a mayor cilindrada (50cc, 110cc, 125cc, etc.).
            </remarks>
        </member>
        <member name="T:MotorcycleManager.WebAPI.Controllers.CreateSightingRequest">
            <summary>
            Request model para crear un avistamiento con FormData.
            </summary>
        </member>
        <member name="T:MotorcycleManager.WebAPI.Controllers.UpdateSightingRequest">
            <summary>
            Request model para actualizar un avistamiento.
            </summary>
        </member>
        <member name="T:MotorcycleManager.WebAPI.Converters.EngineDisplacementConverter">
            <summary>
            Conversor personalizado para el enum EngineDisplacement que permite 
            deserializar tanto valores numéricos como strings del JSON.
            </summary>
        </member>
    </members>
</doc>
